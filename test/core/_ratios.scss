// Core Ratio Tests
// ================
@use "sass:math";

@include test-module('Core Ratios') {


// Ratio [function]
// ----------------
@include describe('Ratio [function]') {
  @include it('Returns a named ratio') {
    @include assert-equal(
      ratio('_fifth'),
      math.div(3, 2)
    );
  }

  @include it('Returns a linear ratio') {
    @include assert-equal(
      ratio('linear'),
      'linear'
    );
  }

  @include it('Returns a recursive ratio') {
    @include assert-equal(
      ratio('new'),
      ratio('_octave')
    );
  }

  @include it('Accepts $do adjustments') {
    @include assert-equal(
      ratio('new', ('plus': 1)),
      ratio('_octave') + 1
    );
  }

  @include it('Accepts custom source') {
    $custom: (
      'special': math.div(16, 9),
      'custom-source': '#special',
    );

    @include assert-equal(
      ratio('custom-source', $source: $custom),
      math.div(16, 9)
    );
  }
}


@include describe('Add Ratios [mixin]') {
  $old: $ratios;
  $new1: (
    'test': math.div(1, 3),
    'other': math.div(1, 2),
    );
  $new2: (
    'test': math.div(16, 9)
  );
  @include add-ratios($new1, $new2);
  @include it('Adds maps to the $ratios global') {
    @include assert-equal(
      $ratios,
      _a_map-multimerge($old, $new1, $new2)
    );
  }
  $ratios: $old !global;
}

} // end module
