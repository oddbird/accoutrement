@use '../../node_modules/sass-true/sass/true' as *;
@use '../../sass/tokens/register/math';
@use '../../sass/tokens/function';
@use 'sass:meta';

// Math Tests
// ==========
@include test-module('tokens/register/math') {
  // Plus/Add
  // --------
  @include describe('Plus [function]') {
    @include it('Adds numbers') {
      @include assert-equal(math.plus(400px, 14px), 414px);
    }

    @include it('is registered under the correct aliases') {
      $actual: meta.get-function('plus', $module: 'math');

      @each $alias in ('plus', 'add', '+') {
        @include assert-equal(function.get($alias), $actual, $alias);
      }
    }
  }

  // Minus/Subtract
  // --------------
  @include describe('Minus [function]') {
    @include it('Subtracts numbers') {
      @include assert-equal(math.minus(3em, 1), 2em);
    }

    @include it('is registered under the correct aliases') {
      $actual: meta.get-function('minus', $module: 'math');

      @each $alias in ('minus', 'subtract', '-') {
        @include assert-equal(function.get($alias), $actual, $alias);
      }
    }
  }

  // Times/Multiply
  // --------------
  @include describe('Times [function]') {
    @include it('Multiplies numbers') {
      @include assert-equal(math.times(6em, 0.5), 3em);
    }

    @include it('is registered under the correct aliases') {
      $actual: meta.get-function('times', $module: 'math');

      @each $alias in ('times', 'multiply', '*') {
        @include assert-equal(function.get($alias), $actual, $alias);
      }
    }
  }

  // Divide
  // ------
  @include describe('Divide [function]') {
    @include it('Divides numbers') {
      @include assert-equal(math.divide(3, 2), 1.5);
    }

    @include it('is registered under the correct aliases') {
      $actual: meta.get-function('divide', $module: 'math');

      @each $alias in ('divide', '/') {
        @include assert-equal(function.get($alias), $actual, $alias);
      }
    }
  }

  // Modulo
  // ------
  @include describe('Modulo [function]') {
    @include it('Finds the remainder of numbers') {
      @include assert-equal(math.modulo(3, 2), 1);
    }

    @include it('is registered under the correct aliases') {
      $actual: meta.get-function('modulo', $module: 'math');

      @each $alias in ('modulo', 'mod', '%') {
        @include assert-equal(function.get($alias), $actual, $alias);
      }
    }
  }
} // end module
